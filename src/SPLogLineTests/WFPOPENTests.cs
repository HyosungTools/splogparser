using Microsoft.VisualStudio.TestTools.UnitTesting;
using LogFileHandler;
using LogLineHandler;
using Samples;
using Contract;

namespace SPLogLineTests
{
   [TestClass]
   public class WFPOPENTests
   {
      [TestMethod]
      public void WFPOPEN_Timestamp()
      {
         ILogFileHandler logFileHandler = new SPLogHandler(new CreateTextStreamReaderMock());
         ILogLine logLine = logFileHandler.IdentifyLine(samples_general.WFPOPEN);
         string expected = "2023-04-04 03:05:20.026";

         Assert.IsTrue(logLine is WFPOPEN);
         WFPOPEN spLine = (WFPOPEN)logLine;
         Assert.AreEqual(expected, spLine.Timestamp, $"Expect {expected} Actual {spLine.Timestamp}");
      }

      [TestMethod]
      public void WFPOPEN_HResult()
      {
         WFPOPEN spLine = new WFPOPEN(new SPLogHandler(new CreateTextStreamReaderMock()), samples_general.WFPOPEN, XFSType.WFPOPEN);
         Assert.IsTrue(spLine.HResult == "");
      }

      [TestMethod]
      public void WFPOPEN_lpszLogicalName()
      {
         WFPOPEN spLine = new WFPOPEN(new SPLogHandler(new CreateTextStreamReaderMock()), samples_general.WFPOPEN, XFSType.WFPOPEN);
         Assert.IsTrue(spLine.lpszLogicalName == "Sensors");
      }

      [TestMethod]
      public void WFPOPEN_lpszAppID()
      {
         WFPOPEN spLine = new WFPOPEN(new SPLogHandler(new CreateTextStreamReaderMock()), samples_general.WFPOPEN, XFSType.WFPOPEN);
         Assert.IsTrue(spLine.lpszAppID == "NH XFS AGENT");
      }

      [TestMethod]
      public void WFPOPEN_2_Timestamp()
      {
         ILogFileHandler logFileHandler = new SPLogHandler(new CreateTextStreamReaderMock());
         ILogLine logLine = logFileHandler.IdentifyLine(samples_general.WFPOPEN2);
         string expected = "2023-04-04 03:05:20.026";

         Assert.IsTrue(logLine is WFPOPEN);
         WFPOPEN spLine = (WFPOPEN)logLine;
         Assert.AreEqual(expected, spLine.Timestamp, $"Expected {expected} Actual {spLine.Timestamp}");
      }

      [TestMethod]
      public void WFPOPEN_2_HResult()
      {
         WFPOPEN spLine = new WFPOPEN(new SPLogHandler(new CreateTextStreamReaderMock()), samples_general.WFPOPEN2, XFSType.WFPOPEN);
         Assert.IsTrue(spLine.HResult == "");
      }

      [TestMethod]
      public void WFPOPEN_2_lpszLogicalName()
      {
         WFPOPEN spLine = new WFPOPEN(new SPLogHandler(new CreateTextStreamReaderMock()), samples_general.WFPOPEN2, XFSType.WFPOPEN);
         Assert.IsTrue(spLine.lpszLogicalName == "Sensors");
      }

      [TestMethod]
      public void WFPOPEN_2_lpszAppID()
      {
         WFPOPEN spLine = new WFPOPEN(new SPLogHandler(new CreateTextStreamReaderMock()), samples_general.WFPOPEN2, XFSType.WFPOPEN);
         Assert.IsTrue(spLine.lpszAppID == "MoniPlus2.Loader.exe");
      }
   }
}

